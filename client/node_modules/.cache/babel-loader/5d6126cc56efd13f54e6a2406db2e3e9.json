{"ast":null,"code":"export default class ApiRequestHandler {\n  constructor() {\n    this.apiRoute = 'http://localhost:8080/api';\n    this.headers = {\n      'Content-Type': 'application/json'\n    };\n  }\n\n  getHeaders(extraHeaders) {\n    const headers = { ...this.headers,\n      ...extraHeaders\n    };\n    return headers;\n  }\n\n  async get(route, {\n    query,\n    headers\n  }, callback) {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'GET',\n      headers: this.getHeaders(headers)\n    });\n    await callback(resp.status === 204 ? {\n      status: resp.status\n    } : {\n      status: resp.status,\n      ...(await resp.json())\n    });\n  }\n\n  async head(route, {\n    headers\n  }, callback) {\n    const resp = await fetch(`${this.apiRoute}${route}`, {\n      method: 'HEAD',\n      headers: this.getHeaders(headers)\n    });\n    await callback(resp.status === 204 ? {\n      status: resp.status\n    } : {\n      status: resp.status\n    });\n  }\n\n  async post(route, {\n    query,\n    body,\n    headers\n  }, callback) {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: this.getHeaders(headers),\n      body: body ? JSON.stringify(body) : null\n    });\n    await callback(resp.status === 204 ? {\n      status: resp.status\n    } : {\n      status: resp.status,\n      ...(await resp.json())\n    });\n  }\n\n  async put(route, {\n    query,\n    body,\n    headers\n  }, callback) {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'PUT',\n      headers: this.getHeaders(headers),\n      body: body ? JSON.stringify(body) : null\n    });\n    await callback(resp.status === 204 ? {\n      status: resp.status\n    } : {\n      status: resp.status,\n      ...(await resp.json())\n    });\n  }\n\n  async delete(route, {\n    query,\n    body,\n    headers\n  }, callback) {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'DELETE',\n      headers: this.getHeaders(headers),\n      body: body ? JSON.stringify(body) : null\n    });\n    await callback(resp.status === 204 ? {\n      status: resp.status\n    } : {\n      status: resp.status,\n      ...(await resp.json())\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Viviana/Desktop/proiect tw2/New folder (2)/proiect/client/src/entities/ApiRequestHelper.js"],"names":["ApiRequestHandler","constructor","apiRoute","headers","getHeaders","extraHeaders","get","route","query","callback","resp","fetch","method","status","json","head","post","body","mode","JSON","stringify","put","delete"],"mappings":"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","sourcesContent":["export default class ApiRequestHandler\n{\n  constructor()\n  {\n    this.apiRoute = 'http://localhost:8080/api';\n    this.headers = {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  getHeaders(extraHeaders)\n  {\n    const headers = { ...this.headers, ...extraHeaders};\n\n    return headers;\n  }\n\n  async get(route, { query, headers }, callback)\n  {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'GET',\n      headers: this.getHeaders(headers),\n    });\n\n    await callback(resp.status === 204 ? { status: resp.status }  : { status: resp.status, ...await resp.json() });\n  }\n\n  async head(route, { headers }, callback)\n  {\n    const resp = await fetch(`${this.apiRoute}${route}`, {\n      method: 'HEAD',\n      headers: this.getHeaders(headers),\n    });\n\n    await callback(resp.status === 204 ? { status: resp.status }  : { status: resp.status });\n  }\n\n  async post(route, { query, body, headers }, callback)\n  {\n      const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: this.getHeaders(headers),\n        body: body ? JSON.stringify(body) : null\n      });\n\n    await callback(resp.status === 204 ? { status: resp.status }  : { status: resp.status, ...await resp.json() });\n  }\n\n  async put(route, { query, body, headers }, callback)\n  {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'PUT',\n      headers: this.getHeaders(headers),\n      body: body ? JSON.stringify(body) : null\n    });\n\n    await callback(resp.status === 204 ? { status: resp.status }  : { status: resp.status, ...await resp.json() });\n  }\n\n  async delete(route, { query, body, headers }, callback)\n  {\n    const resp = await fetch(`${this.apiRoute}${route}${query ? query : ''}`, {\n      method: 'DELETE',\n      headers: this.getHeaders(headers),\n      body: body ? JSON.stringify(body) : null\n    });\n\n    await callback(resp.status === 204 ? { status: resp.status }  : { status: resp.status, ...await resp.json() });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}