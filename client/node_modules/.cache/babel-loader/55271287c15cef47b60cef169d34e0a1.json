{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Viviana\\\\Desktop\\\\proiect tw2\\\\New folder (2)\\\\proiect\\\\client\\\\src\\\\components\\\\Grade.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Alert, Button, Card, CardBody, CardHeader, Container, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\nimport ApiRequestHelper from '../entities/ApiRequestHelper';\nimport './Card.css';\n\nconst renderTeams = (teams, setEditModalData, setGrade) => {\n  const getGradeFromJury = (userId, jury) => jury.grades.filter(g => g.userId === userId)[0].value.toFixed(2);\n\n  const formatDeadlineDate = jury => {\n    if (jury && jury.deadline) {\n      return jury.deadline.replace('T', ' ').substr(0, jury.deadline.length - 5);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    responsive: true,\n    striped: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Numele Echipei\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Numele proiectului\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [teams && teams.values.filter(t => t.Jury.grades.some(g => g.userId === teams.userId)).map((t, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t.project_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => {\n              if (getGradeFromJury(teams.userId, t.Jury)) {\n                setGrade(getGradeFromJury(teams.userId, t.Jury));\n              }\n\n              setEditModalData({\n                isOpen: true,\n                teamId: t.id,\n                deliverables: t.Deliverables\n              });\n            },\n            children: getGradeFromJury(teams.userId, t.Jury) || 'Fara nota'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: formatDeadlineDate(t.Jury.grades.filter(g => g.userId === teams.userId)[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)), (!teams || teams.values.filter(t => t.Jury.grades.some(g => g.userId === teams.userId)).length < 1) && /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: \"5\",\n          children: \"Nu s-au gasit echipe de juriu.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nconst createModal = (color, message, toggle) => {\n  const btnClickEvent = async (e) => {\n    await toggle(e);\n\n    if (color === 'success') {\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: message.length > 0,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: color === 'success' ? 'Success' : 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        color: color,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: btnClickEvent,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\nconst getTeamsData = async (requestHandler, authHandler, teams, setTeams, setError) => {\n  let detailedTeams = [],\n      error = null;\n\n  const processResp = resp => resp.status !== 200 ? error = resp.message : detailedTeams.push(resp);\n\n  for (let t of teams.values) {\n    await requestHandler.get(`/teams/${t.id}`, {\n      headers: authHandler.getAuthorizationHeader()\n    }, processResp);\n\n    if (error != null) {\n      break;\n    }\n  }\n\n  if (error != null) {\n    setError(error);\n  } else {\n    setTeams({\n      values: detailedTeams,\n      userId: teams.userId\n    });\n  }\n};\n\nconst createEditModal = (authHandler, data, setData, grade, setGrade, setSuccess, setError) => {\n  const handleChange = e => {\n    if (e.target.value !== '') {\n      let value = parseFloat(e.target.value);\n\n      if (isNaN(value)) {\n        setError('Nota nu este un numar');\n      } else {\n        setGrade(value);\n      }\n    }\n  };\n\n  const saveGrade = async (_) => {\n    const requestHandler = new ApiRequestHelper();\n    await requestHandler.post(`/teams/${data.teamId}/grade`, {\n      body: {\n        grade: grade\n      },\n      headers: authHandler.getAuthorizationHeader()\n    }, resp => resp.status === 200 ? setSuccess(resp.message) : setError(resp.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: data.isOpen,\n    toggle: _ => setData({\n      isOpen: false\n    }),\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: \"Modifica nota\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        striped: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tema\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descriere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [data.deliverables && data.deliverables.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"link\",\n                href: d.url || 'https://google.com',\n                rel: \"noreferrer\",\n                target: \"_blank\",\n                children: \"Deschide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)), !data.deliverables && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: \"Nu s-au gasit teme.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"grade\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"grade\",\n          name: \"grade\",\n          type: \"number\",\n          placeholder: \"10\",\n          min: \"0\",\n          max: \"10\",\n          step: \"0.5\",\n          value: grade,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: _ => setData({\n          isOpen: false\n        }),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: async _ => await saveGrade(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function Grade({\n  useAuthHandler\n}) {\n  _s();\n\n  const authHandler = useAuthHandler();\n  const [teams, setTeams] = useState(null);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [editModal, setEditModalData] = useState({\n    isOpen: false\n  });\n  const [grade, setGrade] = useState(5);\n  useEffect(_ => {\n    const requestHandler = new ApiRequestHelper();\n\n    (async _ => {\n      requestHandler.get(`/users`, {\n        query: `?username=${authHandler.getUsername()}`,\n        headers: authHandler.getAuthorizationHeader()\n      }, async resp => resp.status !== 200 ? setError(resp.message) : await requestHandler.get(`/users/${resp[0].id}`, {\n        headers: authHandler.getAuthorizationHeader()\n      }, async userResp => {\n        if (userResp.status !== 200) {\n          setError(userResp.message);\n        } else {\n          await getTeamsData(requestHandler, authHandler, {\n            values: [...userResp.Juries.map(j => j.Team)],\n            userId: userResp.id\n          }, setTeams, setError);\n        }\n      }));\n    })();\n  }, [authHandler]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-2\",\n    children: [createModal('success', success, _ => setSuccess('')), createModal('danger', error, _ => setError('')), createEditModal(authHandler, editModal, setEditModalData, grade, setGrade, setSuccess, setError), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: \"Proiect pentru notare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: renderTeams(teams, setEditModalData, setGrade)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grade, \"jWcgR4ySiLdd35f5b465QlodUOs=\", true);\n\n_c = Grade;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grade\");","map":{"version":3,"sources":["C:/Users/Viviana/Desktop/proiect tw2/New folder (2)/proiect/client/src/components/Grade.js"],"names":["useEffect","useState","Alert","Button","Card","CardBody","CardHeader","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Table","ApiRequestHelper","renderTeams","teams","setEditModalData","setGrade","getGradeFromJury","userId","jury","grades","filter","g","value","toFixed","formatDeadlineDate","deadline","replace","substr","length","values","t","Jury","some","map","i","name","project_name","isOpen","teamId","id","deliverables","Deliverables","createModal","color","message","toggle","btnClickEvent","e","window","location","reload","getTeamsData","requestHandler","authHandler","setTeams","setError","detailedTeams","error","processResp","resp","status","push","get","headers","getAuthorizationHeader","createEditModal","data","setData","grade","setSuccess","handleChange","target","parseFloat","isNaN","saveGrade","_","post","body","d","title","description","url","Grade","useAuthHandler","success","editModal","query","getUsername","userResp","Juries","j","Team"],"mappings":";;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,KARF,EASEC,KATF,EAUEC,KAVF,EAWEC,SAXF,EAYEC,WAZF,EAaEC,WAbF,EAcEC,KAdF,QAeO,YAfP;AAgBA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAO,YAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,gBAAR,EAA0BC,QAA1B,KACpB;AACE,QAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAaA,MAArC,EAA6C,CAA7C,EAAgDK,KAAhD,CAAsDC,OAAtD,CAA8D,CAA9D,CAA3C;;AACA,QAAMC,kBAAkB,GAAGN,IAAI,IAC/B;AACE,QAAGA,IAAI,IAAIA,IAAI,CAACO,QAAhB,EACA;AACE,aAAOP,IAAI,CAACO,QAAL,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,MAAhC,CAAuC,CAAvC,EAA0CT,IAAI,CAACO,QAAL,CAAcG,MAAd,GAAuB,CAAjE,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GARD;;AAUA,sBACE,QAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,OAAO,MAAzB;AAA0B,IAAA,KAAK,MAA/B;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,iBACGf,KAAK,IAAIA,KAAK,CAACgB,MAAN,CAAaT,MAAb,CAAoBU,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOZ,MAAP,CAAca,IAAd,CAAmBX,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAaJ,KAAK,CAACI,MAA3C,CAAzB,EAA6EgB,GAA7E,CAAiF,CAACH,CAAD,EAAII,CAAJ,kBACzF;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAiBA,CAAC,GAAG;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKJ,CAAC,CAACK;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKL,CAAC,CAACM;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AACE,YAAA,OAAO,EAAE,MAAM;AACb,kBAAGpB,gBAAgB,CAACH,KAAK,CAACI,MAAP,EAAea,CAAC,CAACC,IAAjB,CAAnB,EACA;AACEhB,gBAAAA,QAAQ,CAACC,gBAAgB,CAACH,KAAK,CAACI,MAAP,EAAea,CAAC,CAACC,IAAjB,CAAjB,CAAR;AACD;;AACDjB,cAAAA,gBAAgB,CAAC;AAAEuB,gBAAAA,MAAM,EAAE,IAAV;AAAgBC,gBAAAA,MAAM,EAAER,CAAC,CAACS,EAA1B;AAA8BC,gBAAAA,YAAY,EAAEV,CAAC,CAACW;AAA9C,eAAD,CAAhB;AACD,aAPH;AAAA,sBAQGzB,gBAAgB,CAACH,KAAK,CAACI,MAAP,EAAea,CAAC,CAACC,IAAjB,CAAhB,IAA0C;AAR7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE;AAAA,oBAAKP,kBAAkB,CAACM,CAAC,CAACC,IAAF,CAAOZ,MAAP,CAAcC,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAaJ,KAAK,CAACI,MAA7C,EAAqD,CAArD,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA,SAASa,CAAC,CAACS,EAAX;AAAA;AAAA;AAAA;AAAA,cADQ,CADZ,EAqBG,CAAC,CAAC1B,KAAD,IAAUA,KAAK,CAACgB,MAAN,CAAaT,MAAb,CAAoBU,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOZ,MAAP,CAAca,IAAd,CAAmBX,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAaJ,KAAK,CAACI,MAA3C,CAAzB,EAA6EW,MAA7E,GAAsF,CAAjG,kBACC;AAAA,+BACE;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CArDD;;AAuDA,MAAMc,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,KACpB;AACE,QAAMC,aAAa,GAAG,OAAMC,CAAN,KACtB;AACE,UAAMF,MAAM,CAACE,CAAD,CAAZ;;AACA,QAAGJ,KAAK,KAAK,SAAb,EACA;AACEK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,GAPD;;AASA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,OAAO,CAAChB,MAAR,GAAiB,CAAhC;AAAmC,IAAA,MAAM,EAAEiB,MAA3C;AAAA,4BACE,QAAC,WAAD;AAAA,gBAAeF,KAAK,KAAK,SAAV,GAAsB,SAAtB,GAAkC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAA,kBAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,WAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEE,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;AA0BA,MAAMK,YAAY,GAAG,OAAOC,cAAP,EAAuBC,WAAvB,EAAoCxC,KAApC,EAA2CyC,QAA3C,EAAqDC,QAArD,KACrB;AACE,MAAIC,aAAa,GAAG,EAApB;AAAA,MAAwBC,KAAK,GAAG,IAAhC;;AACA,QAAMC,WAAW,GAAGC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBH,KAAK,GAAGE,IAAI,CAACf,OAAnC,GAA6CY,aAAa,CAACK,IAAd,CAAmBF,IAAnB,CAAzE;;AAEA,OAAI,IAAI7B,CAAR,IAAajB,KAAK,CAACgB,MAAnB,EACA;AACE,UAAMuB,cAAc,CAACU,GAAf,CAAoB,UAAShC,CAAC,CAACS,EAAG,EAAlC,EAAqC;AACzCwB,MAAAA,OAAO,EAAEV,WAAW,CAACW,sBAAZ;AADgC,KAArC,EAEHN,WAFG,CAAN;;AAIA,QAAGD,KAAK,IAAI,IAAZ,EACA;AACE;AACD;AACF;;AAED,MAAGA,KAAK,IAAI,IAAZ,EACA;AACEF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAHD,MAKA;AACEH,IAAAA,QAAQ,CAAC;AAAEzB,MAAAA,MAAM,EAAE2B,aAAV;AAAyBvC,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAvC,KAAD,CAAR;AACD;AACF,CAzBD;;AA2BA,MAAMgD,eAAe,GAAG,CAACZ,WAAD,EAAca,IAAd,EAAoBC,OAApB,EAA6BC,KAA7B,EAAoCrD,QAApC,EAA8CsD,UAA9C,EAA0Dd,QAA1D,KACxB;AACE,QAAMe,YAAY,GAAGvB,CAAC,IACtB;AACE,QAAGA,CAAC,CAACwB,MAAF,CAASjD,KAAT,KAAmB,EAAtB,EACA;AACE,UAAIA,KAAK,GAAGkD,UAAU,CAACzB,CAAC,CAACwB,MAAF,CAASjD,KAAV,CAAtB;;AACA,UAAGmD,KAAK,CAACnD,KAAD,CAAR,EACA;AACEiC,QAAAA,QAAQ,CAAC,uBAAD,CAAR;AACD,OAHD,MAKA;AACExC,QAAAA,QAAQ,CAACO,KAAD,CAAR;AACD;AACF;AACF,GAdD;;AAgBA,QAAMoD,SAAS,GAAG,OAAMC,CAAN,KAClB;AACE,UAAMvB,cAAc,GAAG,IAAIzC,gBAAJ,EAAvB;AAEA,UAAMyC,cAAc,CAACwB,IAAf,CAAqB,UAASV,IAAI,CAAC5B,MAAO,QAA1C,EAAmD;AACvDuC,MAAAA,IAAI,EAAE;AAAET,QAAAA,KAAK,EAAEA;AAAT,OADiD;AAEvDL,MAAAA,OAAO,EAAEV,WAAW,CAACW,sBAAZ;AAF8C,KAAnD,EAGHL,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBS,UAAU,CAACV,IAAI,CAACf,OAAN,CAAhC,GAAiDW,QAAQ,CAACI,IAAI,CAACf,OAAN,CAH9D,CAAN;AAID,GARD;;AAUA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEsB,IAAI,CAAC7B,MAApB;AAA4B,IAAA,MAAM,EAAEsC,CAAC,IAAIR,OAAO,CAAC;AAAE9B,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAhD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,UAAU,MAAjB;AAAkB,QAAA,OAAO,MAAzB;AAA0B,QAAA,KAAK,MAA/B;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,qBACG6B,IAAI,CAAC1B,YAAL,IAAqB0B,IAAI,CAAC1B,YAAL,CAAkBP,GAAlB,CAAsB,CAAC6C,CAAD,EAAI5C,CAAJ,kBAC1C;AAAA,oCACE;AAAA,wBAAK4C,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,qCAAI;AAAG,gBAAA,SAAS,EAAC,MAAb;AAAoB,gBAAA,IAAI,EAAEF,CAAC,CAACG,GAAF,IAAS,oBAAnC;AAAyD,gBAAA,GAAG,EAAC,YAA7D;AAA0E,gBAAA,MAAM,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAAS/C,CAAT;AAAA;AAAA;AAAA;AAAA,kBADoB,CADxB,EAQG,CAACgC,IAAI,CAAC1B,YAAN,iBACC;AAAA,mCACE;AAAI,cAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,OAAvB;AACE,UAAA,IAAI,EAAC,QADP;AACgB,UAAA,WAAW,EAAC,IAD5B;AACiC,UAAA,GAAG,EAAC,GADrC;AACyC,UAAA,GAAG,EAAC,IAD7C;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,KAAK,EAAE4B,KAHT;AAGgB,UAAA,QAAQ,EAAEE;AAH1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAkCE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEK,CAAC,IAAIR,OAAO,CAAC;AAAE9B,UAAAA,MAAM,EAAE;AAAV,SAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,MAAMsC,CAAN,IAAW,MAAMD,SAAS,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CArED;;AAuEA,eAAe,SAASQ,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EACf;AAAA;;AACE,QAAM9B,WAAW,GAAG8B,cAAc,EAAlC;AACA,QAAM,CAACtE,KAAD,EAAQyC,QAAR,IAAoB1D,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACwF,OAAD,EAAUf,UAAV,IAAwBzE,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6D,KAAD,EAAQF,QAAR,IAAoB3D,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyF,SAAD,EAAYvE,gBAAZ,IAAgClB,QAAQ,CAAC;AAAEyC,IAAAA,MAAM,EAAE;AAAV,GAAD,CAA9C;AACA,QAAM,CAAC+B,KAAD,EAAQrD,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAACgF,CAAC,IACX;AACE,UAAMvB,cAAc,GAAG,IAAIzC,gBAAJ,EAAvB;;AAEA,KAAC,MAAMgE,CAAN,IAAW;AACVvB,MAAAA,cAAc,CAACU,GAAf,CAAoB,QAApB,EAA6B;AAC3BwB,QAAAA,KAAK,EAAG,aAAYjC,WAAW,CAACkC,WAAZ,EAA0B,EADnB;AAE3BxB,QAAAA,OAAO,EAAEV,WAAW,CAACW,sBAAZ;AAFkB,OAA7B,EAGG,MAAML,IAAN,IAAcA,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBL,QAAQ,CAACI,IAAI,CAACf,OAAN,CAA9B,GAA+C,MAAMQ,cAAc,CAACU,GAAf,CAAoB,UAASH,IAAI,CAAC,CAAD,CAAJ,CAAQpB,EAAG,EAAxC,EAA2C;AAC/GwB,QAAAA,OAAO,EAAEV,WAAW,CAACW,sBAAZ;AADsG,OAA3C,EAEnE,MAAMwB,QAAN,IAAkB;AACnB,YAAGA,QAAQ,CAAC5B,MAAT,KAAoB,GAAvB,EACA;AACEL,UAAAA,QAAQ,CAACiC,QAAQ,CAAC5C,OAAV,CAAR;AACD,SAHD,MAKA;AACE,gBAAMO,YAAY,CAACC,cAAD,EAAiBC,WAAjB,EAA8B;AAAExB,YAAAA,MAAM,EAAE,CAAE,GAAG2D,QAAQ,CAACC,MAAT,CAAgBxD,GAAhB,CAAoByD,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAAL,CAAV;AAAmD1E,YAAAA,MAAM,EAAEuE,QAAQ,CAACjD;AAApE,WAA9B,EAAwGe,QAAxG,EAAkHC,QAAlH,CAAlB;AACD;AACF,OAXqE,CAHtE;AAeD,KAhBD;AAiBD,GArBQ,EAqBN,CAACF,WAAD,CArBM,CAAT;AAuBA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,eACGX,WAAW,CAAC,SAAD,EAAY0C,OAAZ,EAAqBT,CAAC,IAAIN,UAAU,CAAC,EAAD,CAApC,CADd,EAEG3B,WAAW,CAAC,QAAD,EAAWe,KAAX,EAAkBkB,CAAC,IAAIpB,QAAQ,CAAC,EAAD,CAA/B,CAFd,EAGGU,eAAe,CAACZ,WAAD,EAAcgC,SAAd,EAAyBvE,gBAAzB,EAA2CsD,KAA3C,EAAkDrD,QAAlD,EAA4DsD,UAA5D,EAAwEd,QAAxE,CAHlB,eAIE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA,kBACG3C,WAAW,CAACC,KAAD,EAAQC,gBAAR,EAA0BC,QAA1B;AADd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7CuBmE,K;;KAAAA,K","sourcesContent":["import {useEffect, useState} from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Table,\n} from 'reactstrap';\nimport ApiRequestHelper from '../entities/ApiRequestHelper';\nimport './Card.css';\n\nconst renderTeams = (teams, setEditModalData, setGrade) =>\n{\n  const getGradeFromJury = (userId, jury) => jury.grades.filter(g => g.userId === userId)[0].value.toFixed(2);\n  const formatDeadlineDate = jury =>\n  {\n    if(jury && jury.deadline)\n    {\n      return jury.deadline.replace('T', ' ').substr(0, jury.deadline.length - 5);\n    }\n\n    return null;\n  };\n\n  return (\n    <Table responsive striped hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Numele Echipei</th>\n          <th>Numele proiectului</th>\n          <th>Nota</th>\n          <th>Deadline</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {teams && teams.values.filter(t => t.Jury.grades.some(g => g.userId === teams.userId)).map((t, i) => (\n          <tr key={t.id}>\n            <th scope=\"row\">{i + 1}</th>\n            <th>{t.name}</th>\n            <th>{t.project_name}</th>\n            <th>\n              <Button color=\"primary\"\n                onClick={() => {\n                  if(getGradeFromJury(teams.userId, t.Jury))\n                  {\n                    setGrade(getGradeFromJury(teams.userId, t.Jury));\n                  }\n                  setEditModalData({ isOpen: true, teamId: t.id, deliverables: t.Deliverables });\n                }}>\n                {getGradeFromJury(teams.userId, t.Jury) || 'Fara nota'}\n              </Button>\n            </th>\n            <th>{formatDeadlineDate(t.Jury.grades.filter(g => g.userId === teams.userId)[0])}</th>\n          </tr>\n        ))}\n        {(!teams || teams.values.filter(t => t.Jury.grades.some(g => g.userId === teams.userId)).length < 1) &&\n          <tr>\n            <th colSpan=\"5\">Nu s-au gasit echipe de juriu.</th>\n          </tr>}\n      </tbody>\n    </Table>\n  );\n};\n\nconst createModal = (color, message, toggle) =>\n{\n  const btnClickEvent = async e =>\n  {\n    await toggle(e);\n    if(color === 'success')\n    {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <Modal isOpen={message.length > 0} toggle={toggle}>\n      <ModalHeader>{ color === 'success' ? 'Success' : 'Error' }</ModalHeader>\n      \n      <ModalBody>\n        <Alert color={color}>{message}</Alert>\n      </ModalBody>\n      \n      <ModalFooter>\n        <Button color=\"primary\" onClick={btnClickEvent}>Ok</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst getTeamsData = async (requestHandler, authHandler, teams, setTeams, setError) =>\n{\n  let detailedTeams = [], error = null;\n  const processResp = resp => resp.status !== 200 ? error = resp.message : detailedTeams.push(resp);\n\n  for(let t of teams.values)\n  {\n    await requestHandler.get(`/teams/${t.id}`, {\n      headers: authHandler.getAuthorizationHeader()\n    }, processResp);\n\n    if(error != null)\n    {\n      break;\n    }\n  }\n\n  if(error != null)\n  {\n    setError(error);\n  }\n  else\n  {\n    setTeams({ values: detailedTeams, userId: teams.userId });\n  }\n}\n\nconst createEditModal = (authHandler, data, setData, grade, setGrade, setSuccess, setError) =>\n{\n  const handleChange = e =>\n  {\n    if(e.target.value !== '')\n    {\n      let value = parseFloat(e.target.value);\n      if(isNaN(value))\n      {\n        setError('Nota nu este un numar');\n      }\n      else\n      {\n        setGrade(value);\n      }\n    }\n  };\n\n  const saveGrade = async _ =>\n  {\n    const requestHandler = new ApiRequestHelper();\n\n    await requestHandler.post(`/teams/${data.teamId}/grade`, {\n      body: { grade: grade },\n      headers: authHandler.getAuthorizationHeader()\n    }, resp => resp.status === 200 ? setSuccess(resp.message) : setError(resp.message));\n  };\n\n  return (\n    <Modal isOpen={data.isOpen} toggle={_ => setData({ isOpen: false })}>\n      <ModalHeader>Modifica nota</ModalHeader>\n      <ModalBody>\n        <Table responsive striped hover>\n          <thead>\n            <tr>\n              <th>Tema</th>\n              <th>Descriere</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.deliverables && data.deliverables.map((d, i) => (\n              <tr key={i}>\n                <th>{d.title}</th>\n                <th>{d.description}</th>\n                <th><a className=\"link\" href={d.url || 'https://google.com'} rel=\"noreferrer\" target=\"_blank\">Deschide</a></th>\n              </tr>\n            ))}\n            {!data.deliverables && (\n              <tr>\n                <th colSpan=\"3\">Nu s-au gasit teme.</th>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n        <FormGroup>\n          <Label for=\"grade\">Note</Label>\n          <Input id=\"grade\" name=\"grade\"\n            type=\"number\" placeholder=\"10\" min=\"0\" max=\"10\"\n            step=\"0.5\"\n            value={grade} onChange={handleChange} />\n        </FormGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={_ => setData({ isOpen: false })}>Cancel</Button>\n        <Button color=\"primary\" onClick={async _ => await saveGrade()}>Save</Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default function Grade({ useAuthHandler })\n{\n  const authHandler = useAuthHandler();\n  const [teams, setTeams] = useState(null);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [editModal, setEditModalData] = useState({ isOpen: false });\n  const [grade, setGrade] = useState(5);\n\n  useEffect(_ =>\n  {\n    const requestHandler = new ApiRequestHelper();\n\n    (async _ => {\n      requestHandler.get(`/users`, {\n        query: `?username=${authHandler.getUsername()}`,\n        headers: authHandler.getAuthorizationHeader()\n      }, async resp => resp.status !== 200 ? setError(resp.message) : await requestHandler.get(`/users/${resp[0].id}`, {\n        headers: authHandler.getAuthorizationHeader()\n      }, async userResp => {\n        if(userResp.status !== 200)\n        {\n          setError(userResp.message);\n        }\n        else\n        {\n          await getTeamsData(requestHandler, authHandler, { values: [ ...userResp.Juries.map(j => j.Team) ], userId: userResp.id }, setTeams, setError);\n        }\n      }));\n    })();\n  }, [authHandler]);\n\n  return (\n    <Container className=\"py-2\">\n      {createModal('success', success, _ => setSuccess(''))}\n      {createModal('danger', error, _ => setError(''))}\n      {createEditModal(authHandler, editModal, setEditModalData, grade, setGrade, setSuccess, setError)}\n      <Card>\n        <CardHeader>Proiect pentru notare</CardHeader>\n        <CardBody>\n          {renderTeams(teams, setEditModalData, setGrade)}\n        </CardBody>\n      </Card>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}