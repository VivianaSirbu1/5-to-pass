{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Viviana\\\\Desktop\\\\proiect\\\\client\\\\src\\\\components\\\\UsersTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Alert, Button, Card, CardBody, CardHeader, CardTitle, Container, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ApiRequestHandler from '../entities/ApiRequestHelper';\nimport './Card.css';\nexport default function UsersTable({\n  useAuthHandler,\n  onlyStudents,\n  onlyProfessors\n}) {\n  _s();\n\n  const authHandler = useAuthHandler();\n  const [users, setUsers] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const deleteUser = async id => {\n    const requestHandler = new ApiRequestHandler();\n    await requestHandler.delete(`/users/${id}`, {\n      headers: authHandler.getAuthorizationHeader()\n    }, resp => resp.status === 204 ? setSuccess(`User sters cu succes.`) : setError('Nu s-a putuut sterge. Incearca, te rog, mai tarziu.'));\n  };\n\n  const renderRemoveButton = id => {\n    if (!onlyProfessors && currentUser && currentUser.is_professor) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"xs\",\n          color: \"danger\",\n          onClick: async () => await deleteUser(id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderRemoveButtonHeader = _ => {\n    if (!onlyProfessors && currentUser && currentUser.is_professor) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderUsers = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      id: \"table-home\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: onlyStudents ? 'Studenti inregistrati' : onlyProfessors ? 'Profesori inregistrati' : 'Users'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          striped: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Prenume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), renderRemoveButtonHeader()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users && users.map((j, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/user/${j.username}`,\n                  children: j.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: j.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: j.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this), renderRemoveButton(j.id)]\n            }, j.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  };\n\n  useEffect(() => {\n    const requestHandler = new ApiRequestHandler();\n\n    (async () => {\n      await requestHandler.get('/users', {\n        query: `?username=${authHandler.getUsername()}`,\n        headers: authHandler.getAuthorizationHeader()\n      }, resp => resp.status === 200 && setCurrentUser(resp[0]));\n      await requestHandler.get('/users', {\n        query: `?is_professor=${onlyStudents ? 0 : onlyProfessors ? 1 : 0}`,\n        headers: authHandler.getAuthorizationHeader()\n      }, async resp => {\n        let stdnts = [];\n\n        for (let i = 0; i < Object.keys(resp).length - 1; i++) {\n          stdnts.push(resp[i]);\n        }\n\n        setUsers(stdnts);\n      });\n    })();\n  }, [authHandler, onlyStudents, onlyProfessors]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: success.length > 0,\n      toggle: () => setSuccess(''),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Cont creeat.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => {\n            window.location.reload();\n            setSuccess('');\n          },\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: error.length > 0,\n      toggle: () => setError(''),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: [\"Nu am putut gasi user-ul\", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setError(''),\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), renderUsers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersTable, \"HaE2U+61MgG+Rf2Gf98+H7laasI=\", true);\n\n_c = UsersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersTable\");","map":{"version":3,"sources":["C:/Users/Viviana/Desktop/proiect/client/src/components/UsersTable.js"],"names":["React","useState","useEffect","Alert","Button","Card","CardBody","CardHeader","CardTitle","Container","Modal","ModalBody","ModalFooter","ModalHeader","Table","Link","ApiRequestHandler","UsersTable","useAuthHandler","onlyStudents","onlyProfessors","authHandler","users","setUsers","error","setError","success","setSuccess","currentUser","setCurrentUser","deleteUser","id","requestHandler","delete","headers","getAuthorizationHeader","resp","status","renderRemoveButton","is_professor","renderRemoveButtonHeader","_","renderUsers","map","j","i","username","surname","name","get","query","getUsername","stdnts","Object","keys","length","push","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Alert,\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    CardTitle,\n    Container,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Table\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ApiRequestHandler from '../entities/ApiRequestHelper';\nimport './Card.css';\n\nexport default function UsersTable({ useAuthHandler, onlyStudents, onlyProfessors }) {\n    const authHandler = useAuthHandler();\n    const [users, setUsers] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [currentUser, setCurrentUser] = useState(null);\n    const deleteUser = async id => {\n        const requestHandler = new ApiRequestHandler();\n        await requestHandler.delete(`/users/${id}`, {\n            headers: authHandler.getAuthorizationHeader()\n        }, resp => resp.status === 204 ? setSuccess(`User sters cu succes.`) : setError('Nu s-a putuut sterge. Incearca, te rog, mai tarziu.'));\n    };\n\n    const renderRemoveButton = id =>\n    {\n        if(!onlyProfessors && currentUser && currentUser.is_professor)\n        {\n            return (<th><Button size=\"xs\" color=\"danger\" onClick={async () => await deleteUser(id)}>Remove</Button></th>);\n        }\n\n        return null;\n    }\n    const renderRemoveButtonHeader = _ =>\n    {\n        if(!onlyProfessors && currentUser && currentUser.is_professor)\n        {\n            return (<th></th>);\n        }\n\n        return null;\n    }\n\n    const renderUsers = () => {\n        return (\n                <Card id=\"table-home\">\n                    <CardHeader>\n                        <CardTitle tag=\"h3\">{onlyStudents ? 'Studenti inregistrati' : (onlyProfessors ? 'Profesori inregistrati' : 'Users') }</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                        <Table responsive striped hover >\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Username</th>\n                                    <th>Prenume</th>\n                                    <th>Nume</th>\n                                    { renderRemoveButtonHeader() }\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { users && users.map((j, i) =>\n                                    <tr key={j.id}>\n                                        <th scope=\"row\">{i + 1}</th>\n                                        <th><Link to={`/user/${j.username}`}>{j.username}</Link></th>\n                                        <th>{j.surname}</th>\n                                        <th>{j.name}</th>\n                                        { renderRemoveButton(j.id) }\n                                    </tr>)\n                                }\n                            </tbody>\n                        </Table>\n                    </CardBody>\n                </Card>\n        )\n    };\n\n    useEffect(() => {\n        const requestHandler = new ApiRequestHandler();\n        (async () => {\n            await requestHandler.get('/users', {\n                query: `?username=${authHandler.getUsername()}`,\n                headers: authHandler.getAuthorizationHeader()\n            }, resp => resp.status === 200 && setCurrentUser(resp[0]));\n\n            await requestHandler.get('/users', {\n                query: `?is_professor=${onlyStudents ? 0 : (onlyProfessors ? 1 : 0)}`,\n                headers: authHandler.getAuthorizationHeader()\n            }, async resp => {\n                let stdnts = [];\n                for (let i = 0; i < Object.keys(resp).length - 1; i++) {\n                    stdnts.push(resp[i])\n                }\n                setUsers(stdnts)\n            });\n        })();\n    }, [authHandler, onlyStudents, onlyProfessors]);\n\n    return (\n        <Container>\n            <Modal isOpen={success.length > 0} toggle={() => setSuccess('')}>\n                <ModalHeader>Cont creeat.</ModalHeader>\n                \n                <ModalBody>\n                <Alert color=\"success\">{success}</Alert>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={() => { window.location.reload(); setSuccess(''); }}>Ok</Button>\n                </ModalFooter>\n            </Modal>\n            <Modal isOpen={error.length > 0} toggle={() => setError('')}>\n                <ModalHeader>Error</ModalHeader>\n                <ModalBody>\n                    <Alert color=\"danger\">Nu am putut gasi user-ul{error}</Alert>\n                </ModalBody>\n                <ModalFooter>\n                    <Button onClick={() => setError('')}>Ok</Button>\n                </ModalFooter>\n            </Modal>\n            { renderUsers() }\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}