{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Viviana\\\\Desktop\\\\proiect tw2\\\\New folder (2)\\\\proiect\\\\client\\\\src\\\\components\\\\TeamsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Alert, Button, Card, CardBody, CardHeader, CardTitle, Container, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ApiRequestHandler from '../entities/ApiRequestHelper';\nimport './Card.css';\n\nconst createModal = (color, message, toggle) => {\n  const btnClickEvent = async e => {\n    await toggle(e);\n\n    if (color === 'success') {\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: message.length > 0,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: color === 'success' ? 'Success' : 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        color: color,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: btnClickEvent,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport default function TeamsTable({\n  useAuthHandler,\n  onlyStudents,\n  onlyProfessors\n}) {\n  _s();\n\n  const authHandler = useAuthHandler();\n  const [teams, setTeams] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAddTeamModalOpen, toggleAddTeamModal] = useState(false);\n  const requestHandler = new ApiRequestHandler();\n\n  const deleteTeam = async id => {\n    await requestHandler.delete(`/teams/${id}`, {\n      headers: authHandler.getAuthorizationHeader()\n    }, resp => resp.status === 200 ? setSuccess(`Sters cu succes din echipa`) : setError('Nu s-a putut sterge. Incearaca, te rog, mai tarziu.'));\n  };\n\n  const renderRemoveButton = id => {\n    if (currentUser && currentUser.is_professor) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"xs\",\n          color: \"danger\",\n          onClick: async () => await deleteTeam(id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderRemoveButtonHeader = _ => {\n    if (!onlyProfessors && currentUser && currentUser.is_professor) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderAddTeamButton = _ => {\n    if (!currentUser || currentUser.is_professor !== 1) {\n      return null;\n    }\n\n    const handleSave = async (_) => {\n      await requestHandler.post('/teams', {\n        body: {\n          name: document.getElementById('name').value,\n          project_name: document.getElementById('project-name').value\n        },\n        headers: authHandler.getAuthorizationHeader()\n      }, resp => resp.status !== 200 ? setError(resp.message) : setSuccess(resp.message));\n    };\n\n    const addTeamModal = _ => /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddTeamModalOpen,\n      toggle: _ => toggleAddTeamModal(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Adauga echipa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"name\",\n            children: \"Nume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Team 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"project-name\",\n            children: \"Numele proiectului\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"project-name\",\n            name: \"project-name\",\n            type: \"text\",\n            placeholder: \"Project 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: _ => toggleAddTeamModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 pb-3\",\n      children: [addTeamModal(), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: _ => toggleAddTeamModal(true),\n        children: \"Adauga echipa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderTeams = renderAddTeamButton => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: \" Echipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [renderAddTeamButton && renderAddTeamButton(), /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          striped: true,\n          hover: true,\n          id: \"table-home\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Numele proiectului\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), renderRemoveButtonHeader()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: teams && teams.map((j, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/teams/${j.id}`,\n                  children: j.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: j.project_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), renderRemoveButton(j.id)]\n            }, j.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    const requestHandler = new ApiRequestHandler();\n\n    (async () => {\n      await requestHandler.get('/users', {\n        query: `?username=${authHandler.getUsername()}`,\n        headers: authHandler.getAuthorizationHeader()\n      }, resp => resp.status === 200 && setCurrentUser(resp[0]));\n      await requestHandler.get('/teams', {\n        headers: authHandler.getAuthorizationHeader()\n      }, async resp => {\n        let teamList = [];\n\n        for (let i = 0; i < Object.keys(resp).length - 1; i++) {\n          teamList.push(resp[i]);\n        }\n\n        setTeams(teamList);\n      });\n    })();\n  }, [authHandler, onlyStudents, onlyProfessors]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-2\",\n    children: [createModal('success', success, _ => setSuccess('')), createModal('danger', error, _ => setError('')), renderTeams(renderAddTeamButton)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TeamsTable, \"6yLggZmvlOcRs8RfGtEtNbW83uY=\", true);\n\n_c = TeamsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamsTable\");","map":{"version":3,"sources":["C:/Users/Viviana/Desktop/proiect tw2/New folder (2)/proiect/client/src/components/TeamsTable.js"],"names":["React","useState","useEffect","Alert","Button","Card","CardBody","CardHeader","CardTitle","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Table","Link","ApiRequestHandler","createModal","color","message","toggle","btnClickEvent","e","window","location","reload","length","TeamsTable","useAuthHandler","onlyStudents","onlyProfessors","authHandler","teams","setTeams","error","setError","success","setSuccess","currentUser","setCurrentUser","isAddTeamModalOpen","toggleAddTeamModal","requestHandler","deleteTeam","id","delete","headers","getAuthorizationHeader","resp","status","renderRemoveButton","is_professor","renderRemoveButtonHeader","_","renderAddTeamButton","handleSave","post","body","name","document","getElementById","value","project_name","addTeamModal","renderTeams","map","j","i","get","query","getUsername","teamList","Object","keys","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Alert,\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    CardTitle,\n    Container,\n    FormGroup,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Table\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ApiRequestHandler from '../entities/ApiRequestHelper';\nimport './Card.css'; \n\nconst createModal = (color, message, toggle) => {\n    const btnClickEvent = async e => {\n        await toggle(e);\n        if (color === 'success') {\n            window.location.reload();\n        }\n    };\n\n    return (\n        <Modal isOpen={message.length > 0} toggle={toggle}>\n            <ModalHeader>{color === 'success' ? 'Success' : 'Error'}</ModalHeader>\n\n            <ModalBody>\n                <Alert color={color}>{message}</Alert>\n            </ModalBody>\n\n            <ModalFooter>\n                <Button color=\"primary\" onClick={btnClickEvent}>Ok</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\nexport default function TeamsTable({ useAuthHandler, onlyStudents, onlyProfessors }) {\n    const authHandler = useAuthHandler();\n    const [teams, setTeams] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isAddTeamModalOpen, toggleAddTeamModal] = useState(false);\n    const requestHandler = new ApiRequestHandler();\n\n    const deleteTeam = async id => {\n        await requestHandler.delete(`/teams/${id}`, {\n            headers: authHandler.getAuthorizationHeader()\n        }, resp => resp.status === 200 ? setSuccess(`Sters cu succes din echipa`) : setError('Nu s-a putut sterge. Incearaca, te rog, mai tarziu.'));\n    };\n\n    const renderRemoveButton = id => {\n        if (currentUser && currentUser.is_professor) {\n            return (<th><Button size=\"xs\" color=\"danger\" onClick={async () => await deleteTeam(id)}>Remove</Button></th>);\n        }\n\n        return null;\n    }\n    const renderRemoveButtonHeader = _ => {\n        if (!onlyProfessors && currentUser && currentUser.is_professor) {\n            return (<th>Action</th>);\n        }\n\n        return null;\n    }\n    const renderAddTeamButton = _ => {\n      if(!currentUser || currentUser.is_professor !== 1)\n      {\n        return null;\n      }\n      const handleSave = async _ =>\n      {\n        await requestHandler.post('/teams', {\n          body: { name: document.getElementById('name').value, project_name: document.getElementById('project-name').value },\n          headers: authHandler.getAuthorizationHeader()\n        }, resp => resp.status !== 200 ? setError(resp.message) : setSuccess(resp.message));\n      };\n\n      const addTeamModal = _ => (\n        <Modal isOpen={isAddTeamModalOpen} toggle={_ => toggleAddTeamModal(false)}>\n          <ModalHeader>Adauga echipa</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"name\">Nume</Label>\n              <Input id=\"name\" name=\"name\" type=\"text\" placeholder=\"Team 1\" />\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"project-name\">Numele proiectului</Label>\n              <Input id=\"project-name\" name=\"project-name\" type=\"text\" placeholder=\"Project 1\" />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={_ => toggleAddTeamModal(false)}>Cancel</Button>\n            <Button color=\"primary\" onClick={handleSave}>Save</Button>\n          </ModalFooter>\n        </Modal>\n      );\n\n      return (\n        <div className=\"py-2 pb-3\">\n          {addTeamModal()}\n          <Button color=\"success\" onClick={_ => toggleAddTeamModal(true)}>Adauga echipa</Button>\n        </div>\n      )\n    };\n    const renderTeams = (renderAddTeamButton) => {\n        return (\n            <Card>\n                <CardHeader>\n                    <CardTitle tag=\"h3\"> Echipe</CardTitle>\n                </CardHeader>\n                <CardBody>\n                    {renderAddTeamButton && renderAddTeamButton()}\n                    <Table responsive striped hover id=\"table-home\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Nume</th>\n                                <th>Numele proiectului</th>\n                                {renderRemoveButtonHeader()}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {teams && teams.map((j, i) =>\n                                <tr key={j.id}>\n                                    <th scope=\"row\">{i + 1}</th>\n                                    <th><Link to={`/teams/${j.id}`}>{j.name}</Link></th>\n                                    <th>{j.project_name}</th>\n                                    {renderRemoveButton(j.id)}\n                                </tr>)\n                            }\n                        </tbody>\n                    </Table>\n                </CardBody>\n            </Card>\n        )\n    }\n    useEffect(() => {\n        const requestHandler = new ApiRequestHandler();\n        (async () => {\n            await requestHandler.get('/users', {\n                query: `?username=${authHandler.getUsername()}`,\n                headers: authHandler.getAuthorizationHeader()\n            }, resp => resp.status === 200 && setCurrentUser(resp[0]));\n\n            await requestHandler.get('/teams', {\n                headers: authHandler.getAuthorizationHeader()\n            }, async resp => {\n                let teamList = [];\n                for (let i = 0; i < Object.keys(resp).length - 1; i++) {\n                    teamList.push(resp[i])\n                }\n                setTeams(teamList)\n            });\n        })();\n    }, [authHandler, onlyStudents, onlyProfessors]);\n\n    return (\n      <Container className=\"py-2\">\n        {createModal('success', success, _ => setSuccess(''))}\n        {createModal('danger', error, _ => setError(''))}\n        {renderTeams(renderAddTeamButton)}\n      </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}